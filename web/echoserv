#! /usr/bin/perl
#above line tells it where to find perl in order to be able to run
use Net::WebSocket::Server;
use threads;

#file to send through websocket
my $filename :shared = 'testfile.txt';

my ($conn, $serv);  #initialised out here to access for thread

#start new websocket connection
my $socket = Net::WebSocket::Server->new(
    listen => 8080,
    on_connect => sub {
        ($serv, $conn) = @_;
        
        $conn->on(
        
            ready => sub {
                
                #start file monitoring thread
                my $thr = threads->create('monitorFileThread');

                #send file 
                open(my $fh, '<:encoding(UTF-8)', $filename)
                or die "Could not open '$filename' $!";

                while (my $row = <$fh>) {
                    chomp $row;
                    $conn->send_utf8($row);
                }
            },
                
            utf8 => sub {
                my ($conn, $msg) = @_;
                open my $fh, ">>:encoding(UTF-8)", $filename or die "Could not open $filename: $!";
                print $fh $msg . "\r\n";
                close $fh;
            }

            #send text from text field to all connections (pseudo chat room)
            #utf8 => sub {
            #    my ($conn, $msg) = @_;
            #   #$_->send_utf8($conn->ip() . " : " . $conn->port() . " " . $msg) for $conn->server->connections;
            #},
        );
    },
);


sub monitorFileThread {
    
    my $counter = 0;

    print "$counter/n";

    my $current_mtime = (stat $filename)[9];

    while (1) {
        
        my $updated_mtime = (stat $filename)[9];

        if ($updated_mtime > $current_mtime) {

            $conn->send_utf8("clearPrevious"); #for $conn->server->connections;

            open(my $fh, '<:encoding(UTF-8)', $filename) or die "Could not open '$filename' $!";

            while (my $row = <$fh>) {
                chomp $row;
                $conn->send_utf8($row);# for $conn->server->connections;
            }

            $current_mtime = $updated_mtime;
        }
    }
    $counter++;
}

$socket->start();
