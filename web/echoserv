#! /usr/bin/perl
#above line tells it where to find perl in order to be able to run
use Net::WebSocket::Server;

#file to send through websocket
my $filename = 'testfile.txt';

#start new websocket connection
Net::WebSocket::Server->new(
    listen => 8080,
    on_connect => sub {
        my ($serv, $conn) = @_;
        $conn->on(
            
            #read and send testfile.txt
            ready => sub {
                open(my $fh, '<:encoding(UTF-8)', $filename)
                or die "Could not open '$filename' $!";

                while (my $row = <$fh>) {
                    chomp $row;
                    $conn->send_utf8($row);
                }
                
                #check if test file has changed by comparing mtime and if so resend it
                my ($conn, $msg) = @_;
                my $current_mtime = (stat $filename)[9];
                
                while (1) {
                    my $updated_mtime = (stat $filename)[9];
                    if ($updated_mtime > $current_mtime) {
                        
                        #send message to first clear previous file from browser
                        $conn->send_utf8("clearPrevious") for $conn->server->connections;
                        
                        open(my $fh, '<:encoding(UTF-8)', $filename)
                        or die "Could not open '$filename' $!";

                        while (my $row = <$fh>) {
                                   chomp $row;
                           $conn->send_utf8($row);
                        }
                        #update current_mtime
                        $current_mtime = $updated_mtime;
                   }
                }                
             },               

            #send text from text field to all connections (not working currently)
            utf8 => sub {
                my ($conn, $msg) = @_;
                $_->send_utf8($conn->ip() . " : " . $conn->port() . " " . $msg) for $conn->server->connections;
             },
        );
    },
)->start;
